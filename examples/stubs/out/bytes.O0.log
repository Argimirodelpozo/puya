PC  Teal                                  Stack
1
5
74  byte base64 QmFzZSA2NCBlbmNvZGVk      QmFzZSA2NCBlbmNvZGVk
75  dup                                   QmFzZSA2NCBlbmNvZGVk, QmFzZSA2NCBlbmNvZGVk
76  byte "Base 64 encoded"                QmFzZSA2NCBlbmNvZGVk, QmFzZSA2NCBlbmNvZGVk, QmFzZSA2NCBlbmNvZGVk
77  ==                                    QmFzZSA2NCBlbmNvZGVk, 1
78  assert                                QmFzZSA2NCBlbmNvZGVk
79  byte base32 IJQXGZJAGMZCAZLOMNXWIZLE  QmFzZSA2NCBlbmNvZGVk, QmFzZSAzMiBlbmNvZGVk
81  byte "Base 32 encoded"                QmFzZSA2NCBlbmNvZGVk, QmFzZSAzMiBlbmNvZGVk, QmFzZSAzMiBlbmNvZGVk
83  ==                                    QmFzZSA2NCBlbmNvZGVk, 1
84  assert                                QmFzZSA2NCBlbmNvZGVk
85  byte 0x4261736520313620656e636f646564 QmFzZSA2NCBlbmNvZGVk, QmFzZSAxNiBlbmNvZGVk
87  byte "Base 16 encoded"                QmFzZSA2NCBlbmNvZGVk, QmFzZSAxNiBlbmNvZGVk, QmFzZSAxNiBlbmNvZGVk
89  ==                                    QmFzZSA2NCBlbmNvZGVk, 1
90  assert                                QmFzZSA2NCBlbmNvZGVk
91  byte ""                               QmFzZSA2NCBlbmNvZGVk, <empty bytes[]>
92  uncover 1                             <empty bytes[]>, QmFzZSA2NCBlbmNvZGVk
94  len                                   <empty bytes[]>, 15
95  assert                                <empty bytes[]>
96  len                                   0
97  !                                     1
98  assert
99  byte "a"                              YQ==
100 byte "b"                              YQ==, Yg==
102 concat                                YWI=
103 byte "ab"                             YWI=, YWI=
105 ==                                    1
106 assert
107 byte "c"                              Yw==
110 byte "d"                              Yw==, ZA==
113 concat                                Y2Q=
114 byte "cd"                             Y2Q=, Y2Q=
118 ==                                    1
119 assert
120 byte "abc"                            YWJj
125 dup                                   YWJj, YWJj
126 extract 0 1                           YWJj, YQ==
129 byte "a"                              YWJj, YQ==, YQ==
130 ==                                    YWJj, 1
131 assert                                YWJj
132 dup                                   YWJj, YWJj
133 extract 1 0                           YWJj, YmM=
136 byte "bc"                             YWJj, YmM=, YmM=
138 ==                                    YWJj, 1
139 assert                                YWJj
140 dup                                   YWJj, YWJj
141 substring 1 1                         YWJj, <empty bytes[]>
144 byte ""                               YWJj, <empty bytes[]>, <empty bytes[]>
145 ==                                    YWJj, 1
146 assert                                YWJj
147 dup                                   YWJj, YWJj
148 extract 0 1                           YWJj, YQ==
151 byte "a"                              YWJj, YQ==, YQ==
152 ==                                    YWJj, 1
153 assert                                YWJj
154 dup                                   YWJj, YWJj
155 len                                   YWJj, 3
156 pop                                   YWJj
157 dup                                   YWJj, YWJj
158 len                                   YWJj, 3
159 int 1                                 YWJj, 3, 1
160 -                                     YWJj, 2
161 dig 1                                 YWJj, 2, YWJj
163 int 0                                 YWJj, 2, YWJj, 0
165 uncover 2                             YWJj, YWJj, 0, 2
167 substring3                            YWJj, YWI=
168 byte "ab"                             YWJj, YWI=, YWI=
170 ==                                    YWJj, 1
171 assert                                YWJj
172 dup                                   YWJj, YWJj
173 len                                   YWJj, 3
174 cover 1                               3, YWJj
176 dup                                   3, YWJj, YWJj
177 len                                   3, YWJj, 3
178 int 2                                 3, YWJj, 3, 2
179 -                                     3, YWJj, 1
180 dig 1                                 3, YWJj, 1, YWJj
182 uncover 1                             3, YWJj, YWJj, 1
184 uncover 3                             YWJj, YWJj, 1, 3
186 substring3                            YWJj, YmM=
187 byte "bc"                             YWJj, YmM=, YmM=
189 ==                                    YWJj, 1
190 assert                                YWJj
191 dup                                   YWJj, YWJj
192 len                                   YWJj, 3
193 pop                                   YWJj
194 dup                                   YWJj, YWJj
195 len                                   YWJj, 3
196 int 2                                 YWJj, 3, 2
197 -                                     YWJj, 1
198 cover 1                               1, YWJj
200 dup                                   1, YWJj, YWJj
201 len                                   1, YWJj, 3
202 int 1                                 1, YWJj, 3, 1
203 -                                     1, YWJj, 2
204 uncover 1                             1, 2, YWJj
206 cover 2                               YWJj, 1, 2
208 substring3                            Yg==
209 byte "b"                              Yg==, Yg==
211 ==                                    1
212 assert
213 byte "1234567"                        MTIzNDU2Nw==
214 len                                   7
215 pop
216 byte "1234567"                        MTIzNDU2Nw==
217 len                                   7
218 int 1                                 7, 1
219 -                                     6
220 byte "1234567"                        6, MTIzNDU2Nw==
221 int 1                                 6, MTIzNDU2Nw==, 1
222 uncover 2                             MTIzNDU2Nw==, 1, 6
224 substring3                            MjM0NTY=
225 byte "23456"                          MjM0NTY=, MjM0NTY=
232 ==                                    1
233 assert
234 byte "1"                              MQ==
237 dup                                   MQ==, MQ==
238 cover 1                               MQ==, MQ==
240 byte ""                               MQ==, MQ==, <empty bytes[]>
241 cover 1                               MQ==, <empty bytes[]>, MQ==
243 len                                   MQ==, <empty bytes[]>, 1
244 bnz main_ternary_false@2              MQ==, <empty bytes[]>
252 dig 1                                 MQ==, <empty bytes[]>, MQ==
254 dig 2                                 MQ==, <empty bytes[]>, MQ==, MQ==
256 dup                                   MQ==, <empty bytes[]>, MQ==, MQ==, MQ==
257 cover 2                               MQ==, <empty bytes[]>, MQ==, MQ==, MQ==
259 ==                                    MQ==, <empty bytes[]>, MQ==, 1
260 assert                                MQ==, <empty bytes[]>, MQ==
261 len                                   MQ==, <empty bytes[]>, 1
262 bnz main_ternary_false@5              MQ==, <empty bytes[]>
270 dig 1                                 MQ==, <empty bytes[]>, MQ==
272 dig 2                                 MQ==, <empty bytes[]>, MQ==, MQ==
274 dup                                   MQ==, <empty bytes[]>, MQ==, MQ==, MQ==
275 cover 2                               MQ==, <empty bytes[]>, MQ==, MQ==, MQ==
277 ==                                    MQ==, <empty bytes[]>, MQ==, 1
278 assert                                MQ==, <empty bytes[]>, MQ==
279 len                                   MQ==, <empty bytes[]>, 1
280 bnz main_ternary_false@8              MQ==, <empty bytes[]>
288 dup                                   MQ==, <empty bytes[]>, <empty bytes[]>
289 dig 1                                 MQ==, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>
291 dup                                   MQ==, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>
292 cover 2                               MQ==, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>
294 ==                                    MQ==, <empty bytes[]>, <empty bytes[]>, 1
295 assert                                MQ==, <empty bytes[]>, <empty bytes[]>
296 len                                   MQ==, <empty bytes[]>, 0
297 bnz main_ternary_false@11             MQ==, <empty bytes[]>
300 dup                                   MQ==, <empty bytes[]>, <empty bytes[]>
301 b main_ternary_merge@12               MQ==, <empty bytes[]>, <empty bytes[]>
306 dig 1                                 MQ==, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>
308 dup                                   MQ==, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>
309 cover 2                               MQ==, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>
311 ==                                    MQ==, <empty bytes[]>, <empty bytes[]>, 1
312 assert                                MQ==, <empty bytes[]>, <empty bytes[]>
313 len                                   MQ==, <empty bytes[]>, 0
314 bnz main_ternary_false@14             MQ==, <empty bytes[]>
317 dup                                   MQ==, <empty bytes[]>, <empty bytes[]>
318 b main_ternary_merge@15               MQ==, <empty bytes[]>, <empty bytes[]>
322 dig 1                                 MQ==, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>
324 ==                                    MQ==, <empty bytes[]>, 1
325 assert                                MQ==, <empty bytes[]>
326 dig 1                                 MQ==, <empty bytes[]>, MQ==
328 len                                   MQ==, <empty bytes[]>, 1
329 bz main_ternary_false@17              MQ==, <empty bytes[]>
332 dig 1                                 MQ==, <empty bytes[]>, MQ==
334 b main_ternary_merge@18               MQ==, <empty bytes[]>, MQ==
339 dig 2                                 MQ==, <empty bytes[]>, MQ==, MQ==
341 dup                                   MQ==, <empty bytes[]>, MQ==, MQ==, MQ==
342 cover 2                               MQ==, <empty bytes[]>, MQ==, MQ==, MQ==
344 ==                                    MQ==, <empty bytes[]>, MQ==, 1
345 assert                                MQ==, <empty bytes[]>, MQ==
346 len                                   MQ==, <empty bytes[]>, 1
347 bz main_ternary_false@20              MQ==, <empty bytes[]>
350 dig 1                                 MQ==, <empty bytes[]>, MQ==
352 b main_ternary_merge@21               MQ==, <empty bytes[]>, MQ==
356 dig 2                                 MQ==, <empty bytes[]>, MQ==, MQ==
358 ==                                    MQ==, <empty bytes[]>, 1
359 assert                                MQ==, <empty bytes[]>
360 dup                                   MQ==, <empty bytes[]>, <empty bytes[]>
361 len                                   MQ==, <empty bytes[]>, 0
362 bz main_ternary_false@23              MQ==, <empty bytes[]>
369 dig 1                                 MQ==, <empty bytes[]>, MQ==
371 dig 2                                 MQ==, <empty bytes[]>, MQ==, MQ==
373 ==                                    MQ==, <empty bytes[]>, 1
374 assert                                MQ==, <empty bytes[]>
375 dup                                   MQ==, <empty bytes[]>, <empty bytes[]>
376 len                                   MQ==, <empty bytes[]>, 0
377 bz main_ternary_false@26              MQ==, <empty bytes[]>
384 dup                                   MQ==, <empty bytes[]>, <empty bytes[]>
385 dig 1                                 MQ==, <empty bytes[]>, <empty bytes[]>, <empty bytes[]>
387 ==                                    MQ==, <empty bytes[]>, 1
388 assert                                MQ==, <empty bytes[]>
389 byte 0x00                             MQ==, <empty bytes[]>, AA==
392 byte 0x0f                             MQ==, <empty bytes[]>, AA==, Dw==
395 byte 0xf0                             MQ==, <empty bytes[]>, AA==, Dw==, 8A==
398 cover 2                               MQ==, <empty bytes[]>, 8A==, AA==, Dw==
400 byte 0xff                             MQ==, <empty bytes[]>, 8A==, AA==, Dw==, /w==
403 cover 3                               MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==
405 dig 1                                 MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, AA==
407 dig 1                                 MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, AA==, Dw==
409 b&                                    MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, AA==
410 dig 2                                 MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, AA==, AA==
412 ==                                    MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, 1
413 assert                                MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==
414 dup                                   MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, Dw==
415 dig 3                                 MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, Dw==, 8A==
417 b|                                    MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, /w==
418 dig 4                                 MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, /w==, /w==
420 ==                                    MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, 1
421 assert                                MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==
422 dup                                   MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, Dw==
423 dig 4                                 MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, Dw==, /w==
425 b^                                    MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, 8A==
426 dig 3                                 MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, 8A==, 8A==
428 ==                                    MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, 1
429 assert                                MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==
430 dig 1                                 MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, AA==
432 dig 4                                 MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, AA==, /w==
434 b&                                    MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, AA==
435 dup                                   MQ==, <empty bytes[]>, /w==, 8A==, AA==, Dw==, AA==, AA==
436 uncover 3                             MQ==, <empty bytes[]>, /w==, 8A==, Dw==, AA==, AA==, AA==
438 ==                                    MQ==, <empty bytes[]>, /w==, 8A==, Dw==, AA==, 1
439 assert                                MQ==, <empty bytes[]>, /w==, 8A==, Dw==, AA==
440 dig 3                                 MQ==, <empty bytes[]>, /w==, 8A==, Dw==, AA==, /w==
442 b|                                    MQ==, <empty bytes[]>, /w==, 8A==, Dw==, /w==
443 dup                                   MQ==, <empty bytes[]>, /w==, 8A==, Dw==, /w==, /w==
444 uncover 4                             MQ==, <empty bytes[]>, 8A==, Dw==, /w==, /w==, /w==
446 ==                                    MQ==, <empty bytes[]>, 8A==, Dw==, /w==, 1
447 assert                                MQ==, <empty bytes[]>, 8A==, Dw==, /w==
448 uncover 2                             MQ==, <empty bytes[]>, Dw==, /w==, 8A==
450 b^                                    MQ==, <empty bytes[]>, Dw==, Dw==
451 ==                                    MQ==, <empty bytes[]>, 1
452 assert                                MQ==, <empty bytes[]>
453 int 1                                 MQ==, <empty bytes[]>, 1
454 return                                1