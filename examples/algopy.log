>> poetry run algopy -O1 --output-ssa-ir --output-optimization-ir --output-final-ir --output-cssa-ir --output-post-ssa-ir --output-parallel-copies-ir --out-dir=out --debug-level=1 --log-level=debug .
typing_interactions.py:11 info:  Revealed type is "algopy._primitives.UInt64"
typing_interactions.py:12 info:  Revealed type is "tuple[algopy._primitives.UInt64, algopy._primitives.Bytes]"
debug: Building AWST for with_reentrancy
debug: Building AWST for voting
debug: Building AWST for unssa
debug: Building AWST for undefined_phi_args
debug: Building AWST for unary
debug: Building AWST for transaction
debug: Building AWST for stubs
debug: Building AWST for string_ops
debug: Building AWST for nested_loops
debug: Building AWST for local_storage
debug: Building AWST for koopman
debug: Building AWST for enumeration
debug: Building AWST for edverify
debug: Building AWST for conditional_execution
debug: Building AWST for chained_assignment
debug: Building AWST for callsub
debug: Building AWST for calculator
debug: Building AWST for bytes_ops
debug: Building AWST for boolean_binary_ops
debug: Building AWST for biguint_binary_ops
debug: Building AWST for augmented_assignment
debug: Building AWST for aug_ass_wit_side_efex
debug: Building AWST for asset
debug: Building AWST for arc4_types
debug: Building AWST for application
debug: Building AWST for amm
debug: Building AWST for abi_routing
debug: Building AWST for TEALScript
debug: Building AWST for TEALScript/auction
debug: Building AWST for non_utf8.py
debug: Building AWST for ssa2/__init__.py
debug: Building AWST for ssa/__init__.py
debug: Building AWST for simplish/__init__.py
debug: Building AWST for simple/__init__.py
debug: Building AWST for mylib/__init__.py
debug: Building AWST for module_consts/constants3.py
debug: Building AWST for module_consts/constants2.py
debug: Building AWST for module_consts/constants.py
debug: Building AWST for module_consts/__init__.py
debug: Building AWST for less_simple/__init__.py
debug: Building AWST for everything/constants.py
debug: Building AWST for everything/__init__.py
debug: Building AWST for contains/__init__.py
debug: Building AWST for conditional_expressions/__init__.py
debug: Building AWST for __init__.py
debug: Building AWST for module_consts/constants4.py
debug: Building AWST for embedded algopy lib at <git root>/src/wyvern/lib_embedded/_algopy_.py
debug: Building AWST for with_structs.py
debug: Building AWST for unreachable.py
debug: Building AWST for typing_interactions.py
typing_interactions.py:11 info: algopy type is "uint64"
typing_interactions.py:12 info: algopy type is "tuple<uint64,bytes>"
typing_interactions.py:13 warning: use of typing.assert_type has no effect on compilation
typing_interactions.py:13 warning: expression result is ignored
typing_interactions.py:15 warning: use of typing.cast, output may be invalid or insecure TEAL
typing_interactions.py:15 error: Unsupported comparison == between types
debug: Building AWST for tuple_support.py
debug: Building AWST for byte_constants.py
debug: Building AWST for address_constant.py
debug: Building AWST for with_reentrancy/contract.py
with_reentrancy/contract.py:9 warning: expression result is ignored
debug: Building AWST for voting/voting.py
debug: Building AWST for unssa/contract.py
unssa/contract.py:6 warning: expression result is ignored
unssa/contract.py:13 warning: expression result is ignored
unssa/contract.py:15 warning: expression result is ignored
debug: Building AWST for undefined_phi_args/baddie.py
debug: Building AWST for unary/contract.py
debug: Building AWST for transaction/contract.py
debug: Building AWST for stubs/uint64.py
debug: Building AWST for stubs/bytes.py
debug: Building AWST for stubs/biguint.py
debug: Building AWST for string_ops/contract.py
debug: Building AWST for ssa2/contract.py
debug: Building AWST for ssa/contract.py
debug: Building AWST for simplish/base_class.py
debug: Building AWST for simple/subs.py
debug: Building AWST for simple/pkg_a/pkg_1/subs.py
debug: Building AWST for nested_loops/contract.py
debug: Building AWST for mylib/simple_functions.py
debug: Building AWST for module_consts/contract.py
debug: Building AWST for local_storage/local_storage_with_offsets.py
debug: Building AWST for local_storage/local_storage_contract.py
debug: Building AWST for less_simple/contract.py
debug: Building AWST for koopman/contract.py
debug: Building AWST for everything/my_base.py
debug: Building AWST for enumeration/contract.py
debug: Building AWST for edverify/contract.py
debug: Building AWST for contains/contract.py
debug: Building AWST for conditional_expressions/contract.py
debug: Building AWST for conditional_execution/contract.py
conditional_execution/contract.py:11 warning: expression result is ignored
conditional_execution/contract.py:17 warning: expression result is ignored
conditional_execution/contract.py:23 warning: expression result is ignored
conditional_execution/contract.py:29 warning: expression result is ignored
conditional_execution/contract.py:35 warning: expression result is ignored
conditional_execution/contract.py:41 warning: expression result is ignored
conditional_execution/contract.py:47 warning: expression result is ignored
debug: Building AWST for chained_assignment/contract.py
debug: Building AWST for callsub/contract.py
debug: Building AWST for calculator/contract.py
debug: Building AWST for bytes_ops/contract.py
debug: Building AWST for boolean_binary_ops/contract.py
debug: Building AWST for biguint_binary_ops/contract.py
debug: Building AWST for augmented_assignment/contract.py
debug: Building AWST for aug_ass_wit_side_efex/lol.py
debug: Building AWST for asset/contract.py
debug: Building AWST for arc4_types/tuples.py
debug: Building AWST for arc4_types/structs.py
debug: Building AWST for arc4_types/string.py
debug: Building AWST for arc4_types/numeric.py
debug: Building AWST for arc4_types/bool.py
debug: Building AWST for arc4_types/array.py
debug: Building AWST for application/contract.py
debug: Building AWST for amm/contract.py
debug: Building AWST for abi_routing/contract.py
debug: Building AWST for TEALScript/auction/contract.py
debug: Building AWST for simplish/contract.py
debug: Building AWST for simple/pkg_a/pkg_1/__init__.py
debug: Building AWST for everything/contract.py
debug: Building AWST for simple/pkg_a/__init__.py
debug: Building AWST for simple/contract.py
error: Build failed
>> exit code = 1