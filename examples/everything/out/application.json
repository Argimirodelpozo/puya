{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "register(string)void": {
            "call_config": {
                "no_op": "CALL",
                "opt_in": "CALL"
            }
        },
        "say_hello()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "calculate(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "close_out()void": {
            "call_config": {
                "close_out": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcuY29udHJhY3QuRXZlcnl0aGluZy5hcHByb3ZhbF9wcm9ncmFtKCkgLT4gdWludDY0OgptYWluX2Jsb2NrQDA6CiAgICAgICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICAgICBibnogbWFpbl9lbnRyeXBvaW50QDIKCm1haW5fb25fY3JlYXRlQDE6CiAgICAgICAgY2FsbHN1YiBfX2luaXRfXwoKbWFpbl9lbnRyeXBvaW50QDI6CiAgICAgICAgdHhuIE51bUFwcEFyZ3MKICAgICAgICBieiBtYWluX2FmdGVyX2lmX2Vsc2VAMTEKCm1haW5fYWJpX3JvdXRpbmdAMzoKICAgICAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICAgICAgbWV0aG9kICJjcmVhdGUoKXZvaWQiCiAgICAgICAgbWV0aG9kICJyZWdpc3RlcihzdHJpbmcpdm9pZCIKICAgICAgICBtZXRob2QgInNheV9oZWxsbygpc3RyaW5nIgogICAgICAgIG1ldGhvZCAiY2FsY3VsYXRlKHVpbnQ2NCx1aW50NjQpdWludDY0IgogICAgICAgIG1ldGhvZCAiY2xvc2Vfb3V0KCl2b2lkIgogICAgICAgIHVuY292ZXIgNQogICAgICAgIG1hdGNoIG1haW5fY3JlYXRlX3JvdXRlQDQgbWFpbl9yZWdpc3Rlcl9yb3V0ZUA1IG1haW5fc2F5X2hlbGxvX3JvdXRlQDYgbWFpbl9jYWxjdWxhdGVfcm91dGVANyBtYWluX2Nsb3NlX291dF9yb3V0ZUA4CiAgICAgICAgYiBtYWluX2FmdGVyX2lmX2Vsc2VAMTEKCm1haW5fY3JlYXRlX3JvdXRlQDQ6CiAgICAgICAgdHhuIE9uQ29tcGxldGlvbgogICAgICAgICEKICAgICAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIE5vT3AKICAgICAgICB0eG4gQXBwbGljYXRpb25JRAogICAgICAgICEKICAgICAgICBhc3NlcnQgLy8gaXMgY3JlYXRpbmcKICAgICAgICBjYWxsc3ViIGNyZWF0ZQogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgptYWluX3JlZ2lzdGVyX3JvdXRlQDU6CiAgICAgICAgdHhuIE9uQ29tcGxldGlvbgogICAgICAgIGludCAxCiAgICAgICAgc3dhcAogICAgICAgIHNobAogICAgICAgIGludCAzCiAgICAgICAgJgogICAgICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgb25lIG9mIE5vT3AsIE9wdEluCiAgICAgICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICAgICBhc3NlcnQgLy8gaXMgbm90IGNyZWF0aW5nCiAgICAgICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgICAgIGNhbGxzdWIgcmVnaXN0ZXIKICAgICAgICBpbnQgMQogICAgICAgIHJldHVybgoKbWFpbl9zYXlfaGVsbG9fcm91dGVANjoKICAgICAgICB0eG4gT25Db21wbGV0aW9uCiAgICAgICAgIQogICAgICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgTm9PcAogICAgICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAgICAgYXNzZXJ0IC8vIGlzIG5vdCBjcmVhdGluZwogICAgICAgIGNhbGxzdWIgc2F5X2hlbGxvCiAgICAgICAgYnl0ZSAweDE1MWY3Yzc1CiAgICAgICAgc3dhcAogICAgICAgIGNvbmNhdAogICAgICAgIGxvZwogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgptYWluX2NhbGN1bGF0ZV9yb3V0ZUA3OgogICAgICAgIHR4biBPbkNvbXBsZXRpb24KICAgICAgICAhCiAgICAgICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICAgICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICAgICBhc3NlcnQgLy8gaXMgbm90IGNyZWF0aW5nCiAgICAgICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgICAgICBjYWxsc3ViIGNhbGN1bGF0ZQogICAgICAgIGJ5dGUgMHgxNTFmN2M3NQogICAgICAgIHN3YXAKICAgICAgICBjb25jYXQKICAgICAgICBsb2cKICAgICAgICBpbnQgMQogICAgICAgIHJldHVybgoKbWFpbl9jbG9zZV9vdXRfcm91dGVAODoKICAgICAgICB0eG4gT25Db21wbGV0aW9uCiAgICAgICAgaW50IENsb3NlT3V0CiAgICAgICAgPT0KICAgICAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIENsb3NlT3V0CiAgICAgICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICAgICBhc3NlcnQgLy8gaXMgbm90IGNyZWF0aW5nCiAgICAgICAgY2FsbHN1YiBjbG9zZV9vdXQKICAgICAgICBpbnQgMQogICAgICAgIHJldHVybgoKbWFpbl9hZnRlcl9pZl9lbHNlQDExOgogICAgICAgIGVyciAvLyByZWplY3QgdHJhbnNhY3Rpb24KCgovLyBleGFtcGxlcy5ldmVyeXRoaW5nLmNvbnRyYWN0LkV2ZXJ5dGhpbmcuY3JlYXRlKCkgLT4gdm9pZDoKY3JlYXRlOgogICAgICAgIHByb3RvIDAgMAoKY3JlYXRlX2Jsb2NrQDA6CiAgICAgICAgY2FsbHN1YiBfY2hlY2tfYmFuX2xpc3QKICAgICAgICBjYWxsc3ViIHJlbWVtYmVyX2NyZWF0b3IKICAgICAgICBieXRlICJjb3VudGVyIgogICAgICAgIGludCAwCiAgICAgICAgYXBwX2dsb2JhbF9wdXQKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5ldmVyeXRoaW5nLmNvbnRyYWN0LkV2ZXJ5dGhpbmcuX2NoZWNrX2Jhbl9saXN0KCkgLT4gdm9pZDoKX2NoZWNrX2Jhbl9saXN0OgogICAgICAgIHByb3RvIDAgMAoKX2NoZWNrX2Jhbl9saXN0X2Jsb2NrQDA6CiAgICAgICAgdHhuIFNlbmRlcgogICAgICAgIGNhbGxzdWIgZ2V0X2Jhbm5lZAogICAgICAgICE9CiAgICAgICAgYXNzZXJ0IC8vIFlvdSBhcmUgYmFubmVkLCBnb29kYnllCiAgICAgICAgcmV0c3ViCgoKLy8gZXhhbXBsZXMuZXZlcnl0aGluZy5jb250cmFjdC5nZXRfYmFubmVkKCkgLT4gYnl0ZXM6CmdldF9iYW5uZWQ6CiAgICAgICAgcHJvdG8gMCAxCgpnZXRfYmFubmVkX2Jsb2NrQDA6CiAgICAgICAgYWRkciBWQ01KS1dPWTVQNVA3U0tNWkZGT0NFUk9QSkNaT1RJSk1OSVlOVUNLSDdMUk80NUpNSlA2VVlCSUpBCiAgICAgICAgcmV0c3ViCgoKLy8gZXhhbXBsZXMuZXZlcnl0aGluZy5teV9iYXNlLk15QmFzZS5yZW1lbWJlcl9jcmVhdG9yKCkgLT4gdm9pZDoKcmVtZW1iZXJfY3JlYXRvcjoKICAgICAgICBwcm90byAwIDAKCnJlbWVtYmVyX2NyZWF0b3JfYmxvY2tAMDoKICAgICAgICB0eG4gU2VuZGVyCiAgICAgICAgYnl0ZSAiY3JlYXRvciIKICAgICAgICBzd2FwCiAgICAgICAgYXBwX2dsb2JhbF9wdXQKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5ldmVyeXRoaW5nLmNvbnRyYWN0LkV2ZXJ5dGhpbmcucmVnaXN0ZXIobmFtZSMwOiBieXRlcykgLT4gdm9pZDoKcmVnaXN0ZXI6CiAgICAgICAgcHJvdG8gMSAwCgpyZWdpc3Rlcl9ibG9ja0AwOgogICAgICAgIGNhbGxzdWIgX2NoZWNrX2Jhbl9saXN0CiAgICAgICAgdHhuIE9uQ29tcGxldGlvbgogICAgICAgIGludCBPcHRJbgogICAgICAgID09CiAgICAgICAgYnogcmVnaXN0ZXJfYWZ0ZXJfaWZfZWxzZUA0CgpyZWdpc3Rlcl9pZl9ib2R5QDE6CiAgICAgICAgaW50IDAKICAgICAgICBpbnQgMAogICAgICAgIGJ5dGUgIm5hbWUiCiAgICAgICAgYXBwX2xvY2FsX2dldF9leAogICAgICAgIHN3YXAKICAgICAgICBwb3AKICAgICAgICBibnogcmVnaXN0ZXJfYWZ0ZXJfaWZfZWxzZUA0CgpyZWdpc3Rlcl9pZl9ib2R5QDI6CiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJjb3VudGVyIgogICAgICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICAgICAgYXNzZXJ0IC8vIGNoZWNrIHZhbHVlIGV4aXN0cwogICAgICAgIGNhbGxzdWIgbXVsdGlwbGljYXRpdmVfaWRlbnRpdHkKICAgICAgICArCiAgICAgICAgYnl0ZSAiY291bnRlciIKICAgICAgICBzd2FwCiAgICAgICAgYXBwX2dsb2JhbF9wdXQKCnJlZ2lzdGVyX2FmdGVyX2lmX2Vsc2VANDoKICAgICAgICBpbnQgMAogICAgICAgIGJ5dGUgIm5hbWUiCiAgICAgICAgZnJhbWVfZGlnIC0xCiAgICAgICAgYXBwX2xvY2FsX3B1dAogICAgICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcubXlfYmFzZS5tdWx0aXBsaWNhdGl2ZV9pZGVudGl0eSgpIC0+IHVpbnQ2NDoKbXVsdGlwbGljYXRpdmVfaWRlbnRpdHk6CiAgICAgICAgcHJvdG8gMCAxCgptdWx0aXBsaWNhdGl2ZV9pZGVudGl0eV9ibG9ja0AwOgogICAgICAgIGludCAxCiAgICAgICAgcmV0c3ViCgoKLy8gZXhhbXBsZXMuZXZlcnl0aGluZy5jb250cmFjdC5FdmVyeXRoaW5nLnNheV9oZWxsbygpIC0+IGJ5dGVzOgpzYXlfaGVsbG86CiAgICAgICAgcHJvdG8gMCAxCgpzYXlfaGVsbG9fYmxvY2tAMDoKICAgICAgICBjYWxsc3ViIF9jaGVja19iYW5fbGlzdAogICAgICAgIGludCAwCiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJuYW1lIgogICAgICAgIGFwcF9sb2NhbF9nZXRfZXgKICAgICAgICBibnogc2F5X2hlbGxvX2FmdGVyX2lmX2Vsc2VAMgoKc2F5X2hlbGxvX2lmX2JvZHlAMToKICAgICAgICBieXRlICJceDAwXHgwZkhvd2R5IHN0cmFuZ2VyISIKICAgICAgICBzd2FwCiAgICAgICAgcmV0c3ViCgpzYXlfaGVsbG9fYWZ0ZXJfaWZfZWxzZUAyOgogICAgICAgIGZyYW1lX2RpZyAwCiAgICAgICAgZXh0cmFjdCAyIDAKICAgICAgICBieXRlICJIZWxsbywgIgogICAgICAgIHN3YXAKICAgICAgICBjb25jYXQKICAgICAgICBieXRlICIhIgogICAgICAgIGNvbmNhdAogICAgICAgIGR1cAogICAgICAgIGxlbgogICAgICAgIGl0b2IKICAgICAgICBleHRyYWN0IDYgMgogICAgICAgIHN3YXAKICAgICAgICBjb25jYXQKICAgICAgICBzd2FwCiAgICAgICAgcmV0c3ViCgoKLy8gZXhhbXBsZXMuZXZlcnl0aGluZy5jb250cmFjdC5FdmVyeXRoaW5nLmNhbGN1bGF0ZShhIzA6IGJ5dGVzLCBiIzA6IGJ5dGVzKSAtPiBieXRlczoKY2FsY3VsYXRlOgogICAgICAgIHByb3RvIDIgMQoKY2FsY3VsYXRlX2Jsb2NrQDA6CiAgICAgICAgZnJhbWVfZGlnIC0yCiAgICAgICAgZnJhbWVfZGlnIC0xCiAgICAgICAgY2FsbHN1YiBNeU1pZGRsZUJhc2UuY2FsY3VsYXRlCiAgICAgICAgYnRvaQogICAgICAgIGZyYW1lX2RpZyAtMQogICAgICAgIGJ0b2kKICAgICAgICAqCiAgICAgICAgaXRvYgogICAgICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcubXlfYmFzZS5NeU1pZGRsZUJhc2UuY2FsY3VsYXRlKGEjMDogYnl0ZXMsIGIjMDogYnl0ZXMpIC0+IGJ5dGVzOgpNeU1pZGRsZUJhc2UuY2FsY3VsYXRlOgogICAgICAgIHByb3RvIDIgMQoKTXlNaWRkbGVCYXNlLmNhbGN1bGF0ZV9ibG9ja0AwOgogICAgICAgIGZyYW1lX2RpZyAtMgogICAgICAgIGJ0b2kKICAgICAgICBmcmFtZV9kaWcgLTEKICAgICAgICBidG9pCiAgICAgICAgKwogICAgICAgIGl0b2IKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5ldmVyeXRoaW5nLmNvbnRyYWN0LkV2ZXJ5dGhpbmcuY2xvc2Vfb3V0KCkgLT4gdm9pZDoKY2xvc2Vfb3V0OgogICAgICAgIHByb3RvIDAgMAoKY2xvc2Vfb3V0X2Jsb2NrQDA6CiAgICAgICAgY2FsbHN1YiBfcmVtb3ZlX3NlbmRlcgogICAgICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcuY29udHJhY3QuRXZlcnl0aGluZy5fcmVtb3ZlX3NlbmRlcigpIC0+IHZvaWQ6Cl9yZW1vdmVfc2VuZGVyOgogICAgICAgIHByb3RvIDAgMAoKX3JlbW92ZV9zZW5kZXJfYmxvY2tAMDoKICAgICAgICBpbnQgMAogICAgICAgIGJ5dGUgImNvdW50ZXIiCiAgICAgICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgICAgICBhc3NlcnQgLy8gY2hlY2sgdmFsdWUgZXhpc3RzCiAgICAgICAgY2FsbHN1YiBwb3NpdGl2ZV9vbmUKICAgICAgICAtCiAgICAgICAgYnl0ZSAiY291bnRlciIKICAgICAgICBzd2FwCiAgICAgICAgYXBwX2dsb2JhbF9wdXQKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5ldmVyeXRoaW5nLmNvbnRyYWN0LnBvc2l0aXZlX29uZSgpIC0+IHVpbnQ2NDoKcG9zaXRpdmVfb25lOgogICAgICAgIHByb3RvIDAgMQoKcG9zaXRpdmVfb25lX2Jsb2NrQDA6CiAgICAgICAgaW50IDEKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5ldmVyeXRoaW5nLmNvbnRyYWN0LkV2ZXJ5dGhpbmcuX19pbml0X18oKSAtPiB2b2lkOgpfX2luaXRfXzoKICAgICAgICBwcm90byAwIDAKCl9faW5pdF9fX2Jsb2NrQDA6CiAgICAgICAgcmV0c3ViCgo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcuY29udHJhY3QuRXZlcnl0aGluZy5jbGVhcl9zdGF0ZV9wcm9ncmFtKCkgLT4gdWludDY0OgptYWluX2Jsb2NrQDA6CiAgICAgICAgY2FsbHN1YiBfcmVtb3ZlX3NlbmRlcgogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgoKLy8gZXhhbXBsZXMuZXZlcnl0aGluZy5jb250cmFjdC5FdmVyeXRoaW5nLl9yZW1vdmVfc2VuZGVyKCkgLT4gdm9pZDoKX3JlbW92ZV9zZW5kZXI6CiAgICAgICAgcHJvdG8gMCAwCgpfcmVtb3ZlX3NlbmRlcl9ibG9ja0AwOgogICAgICAgIGludCAwCiAgICAgICAgYnl0ZSAiY291bnRlciIKICAgICAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgICAgIGFzc2VydCAvLyBjaGVjayB2YWx1ZSBleGlzdHMKICAgICAgICBjYWxsc3ViIHBvc2l0aXZlX29uZQogICAgICAgIC0KICAgICAgICBieXRlICJjb3VudGVyIgogICAgICAgIHN3YXAKICAgICAgICBhcHBfZ2xvYmFsX3B1dAogICAgICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcuY29udHJhY3QucG9zaXRpdmVfb25lKCkgLT4gdWludDY0Ogpwb3NpdGl2ZV9vbmU6CiAgICAgICAgcHJvdG8gMCAxCgpwb3NpdGl2ZV9vbmVfYmxvY2tAMDoKICAgICAgICBpbnQgMQogICAgICAgIHJldHN1YgoK"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 1,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "counter": {
                    "type": "uint64",
                    "key": "counter"
                },
                "creator": {
                    "type": "bytes",
                    "key": "creator"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "name": {
                    "type": "bytes",
                    "key": "name"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "MyContract",
        "methods": [
            {
                "name": "create",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "register",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "say_hello",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "calculate",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "close_out",
                "args": [],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}