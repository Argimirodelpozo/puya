abstract contract MyBase
{
  globals {
    ['creator']: algopy.Account
  }
  
  subroutine remember_creator(): None
  {
    this.globals['creator']: algopy.Account = txn<Sender>()
  }
}

abstract contract MyMiddleBase extends (examples.everything.my_base::MyBase)
{
  subroutine calculate(a: algopy.arc4.UIntN[typing.Literal[64]], b: algopy.arc4.UIntN[typing.Literal[64]]): algopy.arc4.UIntN[typing.Literal[64]]
  {
    return arc4_encode(arc4_decode(a, algopy.UInt64) + arc4_decode(b, algopy.UInt64), algopy.arc4.UIntN[typing.Literal[64]])
  }
}

subroutine multiplicative_identity(): algopy.UInt64
{
  return 1u
}