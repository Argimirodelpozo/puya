// Op                             // Op Description                                         Stack (out)                                                                                            Source code                                                                           Source line

#pragma version 8

// examples.abi_types.contract.AbiTypesContract.approval_program() -> uint64:
main_block@0:
        byte "Hello World!"       //                                                        "Hello World!"                                                                                         b"Hello World!"                                                                       File "abi_types/contract.py", line 22
        dup                       // load some_bytes#0 from l-stack (copy)                  some_bytes#0,some_bytes#0                                                                              some_bytes                                                                            File "abi_types/contract.py", line 22
        len                       //                                                        some_bytes#0,{len}                                                                                     String.encode(some_bytes)                                                             File "abi_types/contract.py", line 24
        itob                      //                                                        some_bytes#0,{itob}                                                                                    String.encode(some_bytes)                                                             File "abi_types/contract.py", line 24
        extract 6 2               //                                                        some_bytes#0,{extract}                                                                                 String.encode(some_bytes)                                                             File "abi_types/contract.py", line 24
        dig 1                     // load some_bytes#0 from l-stack (copy)                  some_bytes#0,value_as_uint16%2#0,some_bytes#0                                                          some_bytes                                                                            File "abi_types/contract.py", line 22
        concat                    //                                                        some_bytes#0,{concat}                                                                                  String.encode(some_bytes)                                                             File "abi_types/contract.py", line 24
        dup                       // load some_bytes_as_string#0 from l-stack (copy)        some_bytes#0,some_bytes_as_string#0,some_bytes_as_string#0                                             some_bytes_as_string                                                                  File "abi_types/contract.py", line 24
        extract 2 0               //                                                        some_bytes#0,some_bytes_as_string#0,{extract}                                                          some_bytes_as_string.decode()                                                         File "abi_types/contract.py", line 26
        cover 2                   // store some_bytes_as_bytes_again#0 to l-stack (no copy) some_bytes_as_bytes_again#0,some_bytes#0,some_bytes_as_string#0                                        some_bytes_as_bytes_again                                                             File "abi_types/contract.py", line 26
        dig 1                     // load some_bytes#0 from l-stack (copy)                  some_bytes_as_bytes_again#0,some_bytes#0,some_bytes_as_string#0,some_bytes#0                           some_bytes                                                                            File "abi_types/contract.py", line 22
        dig 1                     // load some_bytes_as_string#0 from l-stack (copy)        some_bytes_as_bytes_again#0,some_bytes#0,some_bytes_as_string#0,some_bytes#0,some_bytes_as_string#0    some_bytes_as_string                                                                  File "abi_types/contract.py", line 24
        !=                        //                                                        some_bytes_as_bytes_again#0,some_bytes#0,some_bytes_as_string#0,{!=}                                   some_bytes != some_bytes_as_string.bytes                                              File "abi_types/contract.py", line 29
        assert                    //                                                        some_bytes_as_bytes_again#0,some_bytes#0,some_bytes_as_string#0                                        assert (                                                                              File "abi_types/contract.py", line 28
        extract 2 0               //                                                        some_bytes_as_bytes_again#0,some_bytes#0,{extract}                                                     some_bytes_as_string.bytes[2:]                                                        File "abi_types/contract.py", line 33
        dig 1                     // load some_bytes#0 from l-stack (copy)                  some_bytes_as_bytes_again#0,some_bytes#0,tmp%4#0,some_bytes#0                                          some_bytes                                                                            File "abi_types/contract.py", line 22
        ==                        //                                                        some_bytes_as_bytes_again#0,some_bytes#0,{==}                                                          some_bytes == some_bytes_as_string.bytes[2:]                                          File "abi_types/contract.py", line 33
        assert                    //                                                        some_bytes_as_bytes_again#0,some_bytes#0                                                               assert (                                                                              File "abi_types/contract.py", line 32
        ==                        //                                                        {==}                                                                                                   some_bytes == some_bytes_as_bytes_again                                               File "abi_types/contract.py", line 36
        assert                    //                                                                                                                                                               assert some_bytes == some_bytes_as_bytes_again                                        File "abi_types/contract.py", line 36
        int 255                   //                                                        255                                                                                                    255                                                                                   File "abi_types/contract.py", line 38
        dup                       // load uint8#0 from l-stack (copy)                       uint8#0,uint8#0                                                                                        uint8                                                                                 File "abi_types/contract.py", line 38
        itob                      //                                                        uint8#0,{itob}                                                                                         UInt8.encode(uint8)                                                                   File "abi_types/contract.py", line 40
        int 7                     //                                                        uint8#0,val_as_bytes%7#0,7                                                                             UInt8.encode(uint8)                                                                   File "abi_types/contract.py", line 40
        int 8                     //                                                        uint8#0,val_as_bytes%7#0,7,8                                                                           UInt8.encode(uint8)                                                                   File "abi_types/contract.py", line 40
        substring3                //                                                        uint8#0,{substring3}                                                                                   UInt8.encode(uint8)                                                                   File "abi_types/contract.py", line 40
        int 0                     //                                                        uint8#0,int8_encoded#0,0                                                                               int8_encoded.decode()                                                                 File "abi_types/contract.py", line 42
        getbyte                   //                                                        uint8#0,{getbyte}                                                                                      int8_encoded.decode()                                                                 File "abi_types/contract.py", line 42
        ==                        //                                                        {==}                                                                                                   uint8 == int8_decoded                                                                 File "abi_types/contract.py", line 44
        assert                    //                                                                                                                                                               assert uint8 == int8_decoded                                                          File "abi_types/contract.py", line 44
        byte 0x7fffffffffffffff00 //                                                        0x7fffffffffffffff00                                                                                   Bytes.from_hex("7FFFFFFFFFFFFFFF00")                                                  File "abi_types/contract.py", line 46
        dup                       // load test_bytes#0 from l-stack (copy)                  test_bytes#0,test_bytes#0                                                                              test_bytes                                                                            File "abi_types/contract.py", line 46
        int 0                     //                                                        test_bytes#0,test_bytes#0,0                                                                            UInt8.from_bytes(test_bytes).decode()                                                 File "abi_types/contract.py", line 47
        getbyte                   //                                                        test_bytes#0,{getbyte}                                                                                 UInt8.from_bytes(test_bytes).decode()                                                 File "abi_types/contract.py", line 47
        int 127                   //                                                        test_bytes#0,tmp%9#0,127                                                                               2**8 - 1 - 2**7                                                                       File "abi_types/contract.py", line 47
        ==                        //                                                        test_bytes#0,{==}                                                                                      UInt8.from_bytes(test_bytes).decode() == 2**8 - 1 - 2**7                              File "abi_types/contract.py", line 47
        assert                    //                                                        test_bytes#0                                                                                           assert UInt8.from_bytes(test_bytes).decode() == 2**8 - 1 - 2**7                       File "abi_types/contract.py", line 47
        dup                       // load test_bytes#0 from l-stack (copy)                  test_bytes#0,test_bytes#0                                                                              test_bytes                                                                            File "abi_types/contract.py", line 46
        int 0                     //                                                        test_bytes#0,test_bytes#0,0                                                                            UIntN[typing.Literal[24]].from_bytes(test_bytes).decode()                             File "abi_types/contract.py", line 48
        int 3                     //                                                        test_bytes#0,test_bytes#0,0,3                                                                          UIntN[typing.Literal[24]].from_bytes(test_bytes).decode()                             File "abi_types/contract.py", line 48
        extract3                  //                                                        test_bytes#0,{extract3}                                                                                UIntN[typing.Literal[24]].from_bytes(test_bytes).decode()                             File "abi_types/contract.py", line 48
        btoi                      //                                                        test_bytes#0,{btoi}                                                                                    UIntN[typing.Literal[24]].from_bytes(test_bytes).decode()                             File "abi_types/contract.py", line 48
        int 8388607               //                                                        test_bytes#0,tmp%12#0,8388607                                                                          2**24 - 1 - 2**23                                                                     File "abi_types/contract.py", line 48
        ==                        //                                                        test_bytes#0,{==}                                                                                      UIntN[typing.Literal[24]].from_bytes(test_bytes).decode() == 2**24 - 1 - 2**23        File "abi_types/contract.py", line 48
        assert                    //                                                        test_bytes#0                                                                                           assert UIntN[typing.Literal[24]].from_bytes(test_bytes).decode() == 2**24 - 1 - 2**23 File "abi_types/contract.py", line 48
        dup                       // load test_bytes#0 from l-stack (copy)                  test_bytes#0,test_bytes#0                                                                              test_bytes                                                                            File "abi_types/contract.py", line 46
        int 0                     //                                                        test_bytes#0,test_bytes#0,0                                                                            UInt16.from_bytes(test_bytes).decode()                                                File "abi_types/contract.py", line 49
        extract_uint16            //                                                        test_bytes#0,{extract_uint16}                                                                          UInt16.from_bytes(test_bytes).decode()                                                File "abi_types/contract.py", line 49
        int 32767                 //                                                        test_bytes#0,tmp%14#0,32767                                                                            2**16 - 1 - 2**15                                                                     File "abi_types/contract.py", line 49
        ==                        //                                                        test_bytes#0,{==}                                                                                      UInt16.from_bytes(test_bytes).decode() == 2**16 - 1 - 2**15                           File "abi_types/contract.py", line 49
        assert                    //                                                        test_bytes#0                                                                                           assert UInt16.from_bytes(test_bytes).decode() == 2**16 - 1 - 2**15                    File "abi_types/contract.py", line 49
        dup                       // load test_bytes#0 from l-stack (copy)                  test_bytes#0,test_bytes#0                                                                              test_bytes                                                                            File "abi_types/contract.py", line 46
        int 0                     //                                                        test_bytes#0,test_bytes#0,0                                                                            UInt32.from_bytes(test_bytes).decode()                                                File "abi_types/contract.py", line 50
        extract_uint32            //                                                        test_bytes#0,{extract_uint32}                                                                          UInt32.from_bytes(test_bytes).decode()                                                File "abi_types/contract.py", line 50
        int 2147483647            //                                                        test_bytes#0,tmp%16#0,2147483647                                                                       2**32 - 1 - 2**31                                                                     File "abi_types/contract.py", line 50
        ==                        //                                                        test_bytes#0,{==}                                                                                      UInt32.from_bytes(test_bytes).decode() == 2**32 - 1 - 2**31                           File "abi_types/contract.py", line 50
        assert                    //                                                        test_bytes#0                                                                                           assert UInt32.from_bytes(test_bytes).decode() == 2**32 - 1 - 2**31                    File "abi_types/contract.py", line 50
        int 0                     //                                                        test_bytes#0,0                                                                                         ABIUInt64.from_bytes(test_bytes).decode()                                             File "abi_types/contract.py", line 51
        extract_uint64            //                                                        {extract_uint64}                                                                                       ABIUInt64.from_bytes(test_bytes).decode()                                             File "abi_types/contract.py", line 51
        int 9223372036854775807   //                                                        tmp%18#0,9223372036854775807                                                                           2**64 - 1 - 2**63                                                                     File "abi_types/contract.py", line 51
        ==                        //                                                        {==}                                                                                                   ABIUInt64.from_bytes(test_bytes).decode() == 2**64 - 1 - 2**63                        File "abi_types/contract.py", line 51
        assert                    //                                                                                                                                                               assert ABIUInt64.from_bytes(test_bytes).decode() == 2**64 - 1 - 2**63                 File "abi_types/contract.py", line 51
        byte 0x0002               //                                                        0x0002                                                                                                 DynamicArray[UInt8](UInt8(1), UInt8(2))                                               File "abi_types/contract.py", line 53
        byte 0x01                 //                                                        array_data%20#0,0x01                                                                                   1                                                                                     File "abi_types/contract.py", line 53
        concat                    //                                                        {concat}                                                                                               DynamicArray[UInt8](UInt8(1), UInt8(2))                                               File "abi_types/contract.py", line 53
        byte 0x02                 //                                                        array_data%20#0,0x02                                                                                   2                                                                                     File "abi_types/contract.py", line 53
        concat                    //                                                        {concat}                                                                                               DynamicArray[UInt8](UInt8(1), UInt8(2))                                               File "abi_types/contract.py", line 53
        pop                       //                                                                                                                                                               DynamicArray[UInt8](UInt8(1), UInt8(2))                                               File "abi_types/contract.py", line 53
        byte 0x0001               //                                                        0x0001                                                                                                 AliasedDynamicArray(UInt8(1))                                                         File "abi_types/contract.py", line 55
        byte 0x01                 //                                                        array_data%21#0,0x01                                                                                   1                                                                                     File "abi_types/contract.py", line 55
        concat                    //                                                        {concat}                                                                                               AliasedDynamicArray(UInt8(1))                                                         File "abi_types/contract.py", line 55
        pop                       //                                                                                                                                                               AliasedDynamicArray(UInt8(1))                                                         File "abi_types/contract.py", line 55
        byte 0x0002               //                                                        0x0002                                                                                                 DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        int 4                     //                                                        array_data%22#0,4                                                                                      DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        dup                       // load next_offset%23#0 from l-stack (copy)              array_data%22#0,next_offset%23#0,next_offset%23#0                                                      DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        itob                      //                                                        array_data%22#0,next_offset%23#0,{itob}                                                                DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        extract 6 2               //                                                        array_data%22#0,next_offset%23#0,{extract}                                                             DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        uncover 2                 // load array_data%22#0 from l-stack (no copy)            next_offset%23#0,value_as_uint16%25#0,array_data%22#0                                                  DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        uncover 1                 // load value_as_uint16%25#0 from l-stack (no copy)       next_offset%23#0,array_data%22#0,value_as_uint16%25#0                                                  DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        concat                    //                                                        next_offset%23#0,{concat}                                                                              DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        cover 1                   // store array_data%22#0 to l-stack (no copy)             array_data%22#0,next_offset%23#0                                                                       DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        byte "\x00\x05Hello"      //                                                        array_data%22#0,next_offset%23#0,"\x00\x05Hello"                                                       "Hello"                                                                               File "abi_types/contract.py", line 57
        len                       //                                                        array_data%22#0,next_offset%23#0,{len}                                                                 DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        +                         //                                                        array_data%22#0,{+}                                                                                    DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        dup                       // load next_offset%23#0 from l-stack (copy)              array_data%22#0,next_offset%23#0,next_offset%23#0                                                      DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        itob                      //                                                        array_data%22#0,next_offset%23#0,{itob}                                                                DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        extract 6 2               //                                                        array_data%22#0,next_offset%23#0,{extract}                                                             DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        uncover 2                 // load array_data%22#0 from l-stack (no copy)            next_offset%23#0,value_as_uint16%28#0,array_data%22#0                                                  DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        uncover 1                 // load value_as_uint16%28#0 from l-stack (no copy)       next_offset%23#0,array_data%22#0,value_as_uint16%28#0                                                  DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        concat                    //                                                        next_offset%23#0,{concat}                                                                              DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        byte "\x00\x05World"      //                                                        next_offset%23#0,array_data%22#0,"\x00\x05World"                                                       "World"                                                                               File "abi_types/contract.py", line 57
        len                       //                                                        next_offset%23#0,array_data%22#0,{len}                                                                 DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        uncover 2                 // load next_offset%23#0 from l-stack (no copy)           array_data%22#0,element_length%29#0,next_offset%23#0                                                   DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        +                         //                                                        array_data%22#0,{+}                                                                                    DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        pop                       //                                                        array_data%22#0                                                                                        DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        byte "\x00\x05Hello"      //                                                        array_data%22#0,"\x00\x05Hello"                                                                        "Hello"                                                                               File "abi_types/contract.py", line 57
        concat                    //                                                        {concat}                                                                                               DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        byte "\x00\x05World"      //                                                        array_data%22#0,"\x00\x05World"                                                                        "World"                                                                               File "abi_types/contract.py", line 57
        concat                    //                                                        {concat}                                                                                               DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        pop                       //                                                                                                                                                               DynamicArray[String](String("Hello"), String("World"))                                File "abi_types/contract.py", line 57
        byte 0x01                 //                                                        0x01                                                                                                   1                                                                                     File "abi_types/contract.py", line 60
        byte 0x0a                 //                                                        array_data%30#0,0x0a                                                                                   10                                                                                    File "abi_types/contract.py", line 60
        concat                    //                                                        {concat}                                                                                               StaticArray[UInt8, t.Literal[4]](                                                     File "abi_types/contract.py", line 59
        byte 0xff                 //                                                        array_data%30#0,0xff                                                                                   255                                                                                   File "abi_types/contract.py", line 60
        concat                    //                                                        {concat}                                                                                               StaticArray[UInt8, t.Literal[4]](                                                     File "abi_types/contract.py", line 59
        byte 0x80                 //                                                        array_data%30#0,0x80                                                                                   128                                                                                   File "abi_types/contract.py", line 60
        concat                    //                                                        {concat}                                                                                               StaticArray[UInt8, t.Literal[4]](                                                     File "abi_types/contract.py", line 59
        pop                       //                                                                                                                                                               StaticArray[UInt8, t.Literal[4]](                                                     File "abi_types/contract.py", line 59
        byte 0x01                 //                                                        0x01                                                                                                   1                                                                                     File "abi_types/contract.py", line 63
        pop                       //                                                                                                                                                               AliasedStaticArray(UInt8(1))                                                          File "abi_types/contract.py", line 63
        int 4                     //                                                        4                                                                                                      StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        dup                       // load next_offset%32#0 from l-stack (copy)              next_offset%32#0,next_offset%32#0                                                                      StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        itob                      //                                                        next_offset%32#0,{itob}                                                                                StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        extract 6 2               //                                                        next_offset%32#0,{extract}                                                                             StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        cover 1                   // store array_data%35#0 to l-stack (no copy)             array_data%35#0,next_offset%32#0                                                                       StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        byte "\x00\x04Ping"       //                                                        array_data%35#0,next_offset%32#0,"\x00\x04Ping"                                                        "Ping"                                                                                File "abi_types/contract.py", line 65
        len                       //                                                        array_data%35#0,next_offset%32#0,{len}                                                                 StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        +                         //                                                        array_data%35#0,{+}                                                                                    StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        dup                       // load next_offset%32#0 from l-stack (copy)              array_data%35#0,next_offset%32#0,next_offset%32#0                                                      StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        itob                      //                                                        array_data%35#0,next_offset%32#0,{itob}                                                                StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        extract 6 2               //                                                        array_data%35#0,next_offset%32#0,{extract}                                                             StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        uncover 2                 // load array_data%35#0 from l-stack (no copy)            next_offset%32#0,value_as_uint16%38#0,array_data%35#0                                                  StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        uncover 1                 // load value_as_uint16%38#0 from l-stack (no copy)       next_offset%32#0,array_data%35#0,value_as_uint16%38#0                                                  StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        concat                    //                                                        next_offset%32#0,{concat}                                                                              StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        byte "\x00\x04Pong"       //                                                        next_offset%32#0,array_data%35#0,"\x00\x04Pong"                                                        "Pong"                                                                                File "abi_types/contract.py", line 65
        len                       //                                                        next_offset%32#0,array_data%35#0,{len}                                                                 StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        uncover 2                 // load next_offset%32#0 from l-stack (no copy)           array_data%35#0,element_length%39#0,next_offset%32#0                                                   StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        +                         //                                                        array_data%35#0,{+}                                                                                    StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        pop                       //                                                        array_data%35#0                                                                                        StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        byte "\x00\x04Ping"       //                                                        array_data%35#0,"\x00\x04Ping"                                                                         "Ping"                                                                                File "abi_types/contract.py", line 65
        concat                    //                                                        {concat}                                                                                               StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        byte "\x00\x04Pong"       //                                                        array_data%35#0,"\x00\x04Pong"                                                                         "Pong"                                                                                File "abi_types/contract.py", line 65
        concat                    //                                                        {concat}                                                                                               StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        pop                       //                                                                                                                                                               StaticArray[String, t.Literal[2]](String("Ping"), String("Pong"))                     File "abi_types/contract.py", line 65
        int 1                     //                                                        1                                                                                                      True                                                                                  File "abi_types/contract.py", line 67
        return                    //                                                                                                                                                               return True                                                                           File "abi_types/contract.py", line 67

